"""
Django settings for this project.

Generated by 'django-admin startproject' using Django 3.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
from environs import Env

env = Env()
env.read_env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool("DEBUG", default=False)

# The name of Product/Project and Company
PRODUCT_NAME = env.str("PRODUCT_NAME")
COMPANY_NAME = env.str("COMPANY_NAME")

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.humanize',

    # Third-party
    'crispy_forms',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'django_q',
    'captcha',

    # Local
    'accounts.apps.AccountsConfig',
    'pools.apps.PoolsConfig',
    'pages.apps.PagesConfig'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [str(BASE_DIR.joinpath('project-template'))],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'config.context_processors.export_vars',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": env("SQL_DATABASE", "product_name_db"),
        "USER": env("SQL_USER", "product_name_db_user"),
        "PASSWORD": env("SQL_PASSWORD", "product#name#db#user#password"),
        "HOST": env("SQL_HOST", "localhost"),
        "PORT": env("SQL_PORT", "5432"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

# Extra places for collectstatic to find static files.
STATICFILES_DIRS = (
    str(BASE_DIR.joinpath('project-static')),
)

STATIC_URL = '/static/'
STATIC_ROOT = str(BASE_DIR.joinpath('files-static'))

MEDIA_URL = '/media/'
MEDIA_ROOT = str(BASE_DIR.joinpath('files-media'))

# -----------------------------------------------------------
# Project Specific Settings
# -----------------------------------------------------------
# Custom User Model
AUTH_USER_MODEL = 'accounts.CustomUser'

# Crispy Form Template
CRISPY_TEMPLATE_PACK = 'bootstrap4'

# django-allauth config
# https://django-allauth.readthedocs.io/en/latest/configuration.html
SITE_ID = 1
LOGIN_REDIRECT_URL = 'status'
ACCOUNT_LOGOUT_REDIRECT_URL = 'product_page'
ACCOUNT_SIGNUP_REDIRECT_URL = 'account_login'
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)
ACCOUNT_AUTHENTICATION_METHOD = 'username_email'
ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS = 2
# Threshold sending e-mail (1 mail in 5 minutes)
ACCOUNT_EMAIL_CONFIRMATION_HMAC = False
ACCOUNT_EMAIL_CONFIRMATION_COOLDOWN = 300
ACCOUNT_EMAIL_VERIFICATION = 'optional'
ACCOUNT_EMAIL_SUBJECT_PREFIX = env.str("PRODUCT_NAME")
# Threshold multiple e-mail limit (2 email accounts)
ACCOUNT_MAX_EMAIL_ADDRESSES = 2
# Override Default Forms
ACCOUNT_FORMS = {}
# or ACCOUNT_SIGNUP_FORM_CLASS = ‘myapp.forms.SignupForm’ | def signup(self, request, user)
# Threshold login attempts (5 times in 5 minutes)
ACCOUNT_LOGIN_ATTEMPTS_LIMIT = 5
ACCOUNT_LOGIN_ATTEMPTS_TIMEOUT = 300
ACCOUNT_SESSION_REMEMBER = None
ACCOUNT_USERNAME_MIN_LENGTH = 10
ACCOUNT_USERNAME_VALIDATORS = 'config.validators.custom_username_validator'
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE = False
# Social SignUp/SignIn
SOCIALACCOUNT_AUTO_SIGNUP = False
SOCIALACCOUNT_EMAIL_VERIFICATION = True
SOCIALACCOUNT_EMAIL_REQUIRED = True
# Account log in upon email confirmation
ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = True


def ACCOUNT_USER_DISPLAY(user):
    """ # FIX-NORMAL: ACCOUNT_USER_DISPLAY (if needed) """
    return user.username if user.username else user.email


# Captcha config (Password Reset via OTP)
CAPTCHA_CHALLENGE_FUNCT = 'captcha.helpers.math_challenge'
CAPTCHA_IMAGE_SIZE = (100, 30)
CAPTCHA_LETTER_ROTATION = (-5, 5)
CAPTCHA_NOISE_FUNCTIONS = ('captcha.helpers.noise_null',)

# Django Q config
Q_CLUSTER = {
    'name': PRODUCT_NAME,
    'workers': 2,
    'timeout': 90,
    'retry': 120,
    'label': 'Django Q',
    'orm': 'default'
}

# SMS Functionality
TXTLCL_KEY = env("TXTLCL_KEY")
